function [ dlr1d2ds, dlr1d2dtheta, Der_dlr1d2dsd, Der_dlr1d2dthetad ] = DerRopeLength( params, s, theta, sd, thetad, sdd, thetadd )

phi = params.ang_base;

Z = (s+params.l5)^2 * sd^2 - 2*(s+params.l5) * sd^2 * params.l2*cos(phi-theta) ...
    - 2*(s+params.l5)^2 *sd * thetad * params.l2 * sin(phi - theta) ...
    + params.l2^2 * sd^2 * cos(phi-theta)^2 + 2*params.l2^2*(s+params.l5) * sd * thetad * cos(phi-theta) * sin(phi-theta) ...
    + params.l2^2 * (s+params.l5)^2 * thetad^2 * sin(phi-theta)^2;

N = params.l2^2 + (s+params.l5)^2 - 2*params.l2*(s+params.l5) * cos(phi-theta);

%Derivative of dot(lr1)^2 wrt s
dlr1d2ds = ((2*(s+params.l5)*sd^2 - 2*sd^2*params.l2 * cos(phi-theta) - ...
    4*(s+params.l5) * sd * thetad * params.l2 * sin(phi-theta) ...
    + 2*params.l2^2 * sd * thetad * cos(phi-theta) * sin(phi-theta) + 2 * ...
    params.l2^2 * (s+params.l5) * thetad^2 * sin(phi-theta)^2) * N ...
    - Z * (2*(s+params.l5) - 2*params.l2 * cos(phi-theta))) / N^2;

%Derivative of dot(lr1)^2 wrt theta
dlr1d2dtheta = ((-2*(s+params.l5) * sd^2 * params.l2 * sin(phi-theta) + 2*(s+params.l5)^2 * ...
    sd * thetad * params.l2 * cos(phi-theta) + 2*params.l2^2 * sd^2 * cos(phi-theta) * sin(phi-theta) ... 
    + 2*params.l2^2*(s+params.l5) * sd * thetad * sin(phi-theta)^2 ...
    - 2*params.l2^2*(s+params.l5) * sd * thetad * cos(phi-theta)^2 ...
    - 2*params.l2^2*(s+params.l5)^2 * thetad^2 * sin(phi-theta) * cos(phi-theta)) * N ...
    - Z * (-2*params.l2*(s+params.l5) * sin(phi-theta))) / N^2;

a_s = (2*(s+params.l5)^2 - 4*(s+params.l5)*params.l2 * cos(phi-theta) + 2*params.l2^2 * cos(phi-theta)^2) / N;

b_s = (-2*(s+params.l5)^2*params.l2 * sin(phi-theta) + 2*params.l2^2*(s+params.l5) * cos(phi-theta) * sin(phi-theta))/N;

c_s = ((4* sd^2*(s+params.l5) - 4*sd^2*params.l2 * cos(phi-theta) - ...
    4*sd*thetad*(s+params.l5)*params.l2 * sin(phi-theta) ...
    - 4*sd*thetad*(s+params.l5)*params.l2 * sin(phi-theta) ...
    + 2*thetad^2*(s+params.l5)^2 * params.l2 * cos(phi-theta) ...
    + 6*sd*thetad*params.l2^2 * cos(phi-theta) * sin(phi-theta) ...
    + 2*thetad^2*params.l2^2*(s+params.l5) * sin(phi-theta)^2 - 2*thetad^2 * params.l2^2 * ... 
    (s+params.l5) * cos(phi-theta)^2) * N ...
    - (2*sd*(s+params.l5)^2 - 4*sd*(s+params.l5)*params.l2 * cos(phi-theta) ...
    - 2 * thetad*(s+params.l5)^2*params.l2 * sin(phi-theta) ...
    + 2*sd*params.l2^2 * cos(phi-theta)^2 + 2*thetad*params.l2^2*(s+params.l5) * ... 
    cos(phi-theta) * sin(phi-theta))* (2*sd*(s+params.l5) - 2*sd*params.l2 * cos(phi-theta) -2*thetad * ...
    params.l2*(s+params.l5) * sin(phi-theta))) / N^2;

%Derivative of dot(lr1)^2 wrt dot(s) and t
Der_dlr1d2dsd =  a_s * sdd + b_s * thetadd + c_s;

a_theta = (-2*(s+params.l5)^2 * sin(phi-theta) + 2*params.l2^2*(s+params.l5) * ...
    cos(phi-theta) * sin(phi-theta)) / N;

b_theta = 2*params.l2^2*(s+params.l5)^2 * sin(phi-theta)^2 / N;

c_theta = ((-4*(s+params.l5)*sd^2*params.l2 * sin(phi-theta) ...
    + s*(s+params.l5)^2*sd*thetad*params.l2 * cos(phi-theta) ...
    + 2*params.l2^2 * sd^2 * cos(phi-theta) * sin(phi-theta) ...
    + 6*params.l2^2 * (s+params.l5)*sd*thetad * sin(phi-theta)^2 ...
    - 2*params.l2^2 * (s+params.l5)*sd*thetad * cos(phi-theta)^2 ...
    - 2*params.l2^2 * (s+params.l5)^2 * thetad^2 * sin(phi-theta) * cos(phi-theta)) * N ...
    - (-2*(s+params.l5)^2 *sd *params.l2 * sin(phi-theta) + 2*params.l2^2*(s+params.l5)*sd * ...
    cos(phi-theta) * sin(phi-theta) + 2*params.l2^2*(s+params.l5)^2 * thetad * sin(phi-theta)^2) * ...
    (2*(s+params.l5)* sd - 2*params.l2*sd * cos(phi-theta) ...
    - 2*params.l2*thetad*(s+params.l5) * sin(phi-theta))) / N^2;

%Derivative of dot(lr1)^2 wrt dot(theta) and t
Der_dlr1d2dthetad = a_theta * sdd + b_theta * thetadd + c_theta;

end

